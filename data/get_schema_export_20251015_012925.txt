
#
#  Welcome to the SurrealDB SQL shell
#
#  How to use this shell:
#    - Different statements within a query should be separated by a (;) semicolon.
#    - To create a multi-line query, end your lines with a (\) backslash, and press enter.
#    - To exit, send a SIGTERM or press CTRL+C
#
#  Consult https://surrealdb.com/docs/cli/sql for further instructions
#
#  SurrealDB version: 2.3.10
#
		
[]

[]

[]

[{ accesses: {  }, analyzers: {  }, apis: {  }, configs: {  }, functions: {  }, models: {  }, params: {  }, tables: { guitar_appointments: 'DEFINE TABLE guitar_appointments TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_badges: 'DEFINE TABLE guitar_badges TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_case: 'DEFINE TABLE guitar_case TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_controls: 'DEFINE TABLE guitar_controls TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_dimensions: 'DEFINE TABLE guitar_dimensions TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_finish: 'DEFINE TABLE guitar_finish TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_hardware: 'DEFINE TABLE guitar_hardware TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_pickups: 'DEFINE TABLE guitar_pickups TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_provenance: 'DEFINE TABLE guitar_provenance TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_setup: 'DEFINE TABLE guitar_setup TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitar_woods: 'DEFINE TABLE guitar_woods TYPE NORMAL SCHEMAFULL PERMISSIONS FULL', guitars: 'DEFINE TABLE guitars TYPE NORMAL SCHEMAFULL PERMISSIONS FULL' }, users: {  } }]

[]

[{ accesses: {  }, databases: { guitars: 'DEFINE DATABASE guitars' }, users: {  } }]

[]

[{ events: {  }, fields: { body_style: 'DEFINE FIELD body_style ON guitars TYPE option<string> PERMISSIONS FULL', brand: "DEFINE FIELD brand ON guitars TYPE string ASSERT $value != '' PERMISSIONS FULL", created_at: 'DEFINE FIELD created_at ON guitars TYPE datetime VALUE time::now() PERMISSIONS FULL', line: 'DEFINE FIELD line ON guitars TYPE option<string> PERMISSIONS FULL', model: "DEFINE FIELD model ON guitars TYPE string ASSERT $value != '' PERMISSIONS FULL", slug: 'DEFINE FIELD slug ON guitars TYPE string PERMISSIONS FULL', updated_at: 'DEFINE FIELD updated_at ON guitars TYPE datetime VALUE time::now() PERMISSIONS FULL', variant: 'DEFINE FIELD variant ON guitars TYPE option<string> PERMISSIONS FULL', weight: 'DEFINE FIELD weight ON guitars TYPE option<string> PERMISSIONS FULL', year_reference: 'DEFINE FIELD year_reference ON guitars TYPE option<string> PERMISSIONS FULL' }, indexes: { idx_guitars_brand_model: 'DEFINE INDEX idx_guitars_brand_model ON guitars FIELDS brand, model UNIQUE', slug_idx: 'DEFINE INDEX slug_idx ON guitars FIELDS slug UNIQUE' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: {  }, indexes: {  }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { binding: 'DEFINE FIELD binding ON guitar_dimensions TYPE option<string> PERMISSIONS FULL', fingerboard_radius: 'DEFINE FIELD fingerboard_radius ON guitar_dimensions TYPE option<string> PERMISSIONS FULL', fret_count: 'DEFINE FIELD fret_count ON guitar_dimensions TYPE option<number> PERMISSIONS FULL', fret_type: 'DEFINE FIELD fret_type ON guitar_dimensions TYPE option<string> PERMISSIONS FULL', guitar_id: 'DEFINE FIELD guitar_id ON guitar_dimensions TYPE record<guitars> PERMISSIONS FULL', neck_profile: 'DEFINE FIELD neck_profile ON guitar_dimensions TYPE option<string> PERMISSIONS FULL', neck_thickness_12th: 'DEFINE FIELD neck_thickness_12th ON guitar_dimensions TYPE option<string> PERMISSIONS FULL', neck_thickness_1st: 'DEFINE FIELD neck_thickness_1st ON guitar_dimensions TYPE option<string> PERMISSIONS FULL', nut_width: 'DEFINE FIELD nut_width ON guitar_dimensions TYPE option<string> PERMISSIONS FULL', scale_length: 'DEFINE FIELD scale_length ON guitar_dimensions TYPE option<string> PERMISSIONS FULL' }, indexes: { uniq_dimensions_guitar: 'DEFINE INDEX uniq_dimensions_guitar ON guitar_dimensions FIELDS guitar_id UNIQUE' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { binding_body: 'DEFINE FIELD binding_body ON guitar_appointments TYPE option<string> PERMISSIONS FULL', binding_fingerboard: 'DEFINE FIELD binding_fingerboard ON guitar_appointments TYPE option<string> PERMISSIONS FULL', guitar_id: 'DEFINE FIELD guitar_id ON guitar_appointments TYPE record<guitars> PERMISSIONS FULL', headstock_veneer: 'DEFINE FIELD headstock_veneer ON guitar_appointments TYPE option<string> PERMISSIONS FULL', inlays: 'DEFINE FIELD inlays ON guitar_appointments TYPE option<string> PERMISSIONS FULL', other: 'DEFINE FIELD other ON guitar_appointments TYPE option<string> PERMISSIONS FULL' }, indexes: { uniq_appointments_guitar: 'DEFINE INDEX uniq_appointments_guitar ON guitar_appointments FIELDS guitar_id UNIQUE' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { body: 'DEFINE FIELD body ON guitar_woods TYPE option<string> PERMISSIONS FULL', fingerboard: 'DEFINE FIELD fingerboard ON guitar_woods TYPE option<string> PERMISSIONS FULL', guitar_id: 'DEFINE FIELD guitar_id ON guitar_woods TYPE record<guitars> PERMISSIONS FULL', neck: 'DEFINE FIELD neck ON guitar_woods TYPE option<string> PERMISSIONS FULL', neck_joint: 'DEFINE FIELD neck_joint ON guitar_woods TYPE option<string> PERMISSIONS FULL', top: 'DEFINE FIELD top ON guitar_woods TYPE option<string> PERMISSIONS FULL', top_carve: 'DEFINE FIELD top_carve ON guitar_woods TYPE option<string> PERMISSIONS FULL' }, indexes: { uniq_woods_guitar: 'DEFINE INDEX uniq_woods_guitar ON guitar_woods FIELDS guitar_id UNIQUE' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { aging: 'DEFINE FIELD aging ON guitar_finish TYPE option<string> PERMISSIONS FULL', color: 'DEFINE FIELD color ON guitar_finish TYPE option<string> PERMISSIONS FULL', colors: 'DEFINE FIELD colors ON guitar_finish TYPE option<array<string>> PERMISSIONS FULL', "colors[*]": 'DEFINE FIELD colors[*] ON guitar_finish TYPE string PERMISSIONS FULL', guitar_id: 'DEFINE FIELD guitar_id ON guitar_finish TYPE record<guitars> PERMISSIONS FULL', notes: 'DEFINE FIELD notes ON guitar_finish TYPE option<string> PERMISSIONS FULL', type: 'DEFINE FIELD type ON guitar_finish TYPE option<string> PERMISSIONS FULL' }, indexes: { uniq_finish_guitar: 'DEFINE INDEX uniq_finish_guitar ON guitar_finish FIELDS guitar_id UNIQUE' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { bridge: 'DEFINE FIELD bridge ON guitar_hardware TYPE option<string> PERMISSIONS FULL', guitar_id: 'DEFINE FIELD guitar_id ON guitar_hardware TYPE record<guitars> PERMISSIONS FULL', material: 'DEFINE FIELD material ON guitar_hardware TYPE option<string> PERMISSIONS FULL', notes: 'DEFINE FIELD notes ON guitar_hardware TYPE option<string> PERMISSIONS FULL', pickguard: 'DEFINE FIELD pickguard ON guitar_hardware TYPE option<string> PERMISSIONS FULL', pickup_rings: 'DEFINE FIELD pickup_rings ON guitar_hardware TYPE option<string> PERMISSIONS FULL', tailpiece: 'DEFINE FIELD tailpiece ON guitar_hardware TYPE option<string> PERMISSIONS FULL', tuners: 'DEFINE FIELD tuners ON guitar_hardware TYPE option<string> PERMISSIONS FULL' }, indexes: { uniq_hardware_guitar: 'DEFINE INDEX uniq_hardware_guitar ON guitar_hardware FIELDS guitar_id UNIQUE' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { action: 'DEFINE FIELD action ON guitar_setup TYPE option<string> PERMISSIONS FULL', guitar_id: 'DEFINE FIELD guitar_id ON guitar_setup TYPE record<guitars> PERMISSIONS FULL', nut_material: 'DEFINE FIELD nut_material ON guitar_setup TYPE option<string> PERMISSIONS FULL', strings: 'DEFINE FIELD strings ON guitar_setup TYPE option<string> PERMISSIONS FULL', truss_rod: 'DEFINE FIELD truss_rod ON guitar_setup TYPE option<string> PERMISSIONS FULL', tuning: 'DEFINE FIELD tuning ON guitar_setup TYPE option<string> PERMISSIONS FULL' }, indexes: { uniq_setup_guitar: 'DEFINE INDEX uniq_setup_guitar ON guitar_setup FIELDS guitar_id UNIQUE' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { coa_included: 'DEFINE FIELD coa_included ON guitar_case TYPE option<bool> PERMISSIONS FULL', guitar_id: 'DEFINE FIELD guitar_id ON guitar_case TYPE record<guitars> PERMISSIONS FULL', notes: 'DEFINE FIELD notes ON guitar_case TYPE option<string> PERMISSIONS FULL', type: 'DEFINE FIELD type ON guitar_case TYPE option<string> PERMISSIONS FULL' }, indexes: { uniq_case_guitar: 'DEFINE INDEX uniq_case_guitar ON guitar_case FIELDS guitar_id UNIQUE' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { guitar_id: 'DEFINE FIELD guitar_id ON guitar_pickups TYPE record<guitars> PERMISSIONS FULL', model: 'DEFINE FIELD model ON guitar_pickups TYPE option<string> PERMISSIONS FULL', position: 'DEFINE FIELD position ON guitar_pickups TYPE option<string> PERMISSIONS FULL', type: 'DEFINE FIELD type ON guitar_pickups TYPE option<string> PERMISSIONS FULL', winding: 'DEFINE FIELD winding ON guitar_pickups TYPE option<string> PERMISSIONS FULL' }, indexes: { idx_pickups_guitar: 'DEFINE INDEX idx_pickups_guitar ON guitar_pickups FIELDS guitar_id' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { detail: 'DEFINE FIELD detail ON guitar_controls TYPE option<string> PERMISSIONS FULL', guitar_id: 'DEFINE FIELD guitar_id ON guitar_controls TYPE record<guitars> PERMISSIONS FULL', name: 'DEFINE FIELD name ON guitar_controls TYPE string PERMISSIONS FULL' }, indexes: { idx_controls_guitar: 'DEFINE INDEX idx_controls_guitar ON guitar_controls FIELDS guitar_id' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { badge: 'DEFINE FIELD badge ON guitar_badges TYPE string PERMISSIONS FULL', guitar_id: 'DEFINE FIELD guitar_id ON guitar_badges TYPE record<guitars> PERMISSIONS FULL' }, indexes: { guitar_badges_guitar_idx: 'DEFINE INDEX guitar_badges_guitar_idx ON guitar_badges FIELDS guitar_id' }, lives: {  }, tables: {  } }]

[{ events: {  }, fields: { guitar_id: 'DEFINE FIELD guitar_id ON guitar_provenance TYPE record<guitars> PERMISSIONS FULL', note: 'DEFINE FIELD note ON guitar_provenance TYPE option<string> PERMISSIONS FULL', url: 'DEFINE FIELD url ON guitar_provenance TYPE option<string> PERMISSIONS FULL' }, indexes: { guitar_provenance_guitar_idx: 'DEFINE INDEX guitar_provenance_guitar_idx ON guitar_provenance FIELDS guitar_id' }, lives: {  }, tables: {  } }]

